// <auto-generated />
using System;
using AdoPetsBKD.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdoPetsBKD.Migrations
{
    [DbContext(typeof(AdoPetsDbContext))]
    [Migration("20251022021914_AddTicketsYCitasDigitales")]
    partial class AddTicketsYCitasDigitales
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdjuntoMedicoExpediente", b =>
                {
                    b.Property<Guid>("AdjuntosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExpedienteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AdjuntosId", "ExpedienteId");

                    b.HasIndex("ExpedienteId");

                    b.ToTable("AdjuntoMedicoExpediente");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Auditoria.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Accion")
                        .HasColumnType("int");

                    b.Property<string>("AfterJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeforeJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Entidad")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EntidadId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("TraceId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Accion")
                        .HasDatabaseName("IX_Audit_Accion");

                    b.HasIndex("TraceId")
                        .HasDatabaseName("IX_Audit_TraceId");

                    b.HasIndex("UsuarioId", "CreatedAt")
                        .HasDatabaseName("IX_Audit_UsuarioId_CreatedAt");

                    b.HasIndex("Entidad", "EntidadId", "CreatedAt")
                        .HasDatabaseName("IX_Audit_Entidad_EntidadId_CreatedAt");

                    b.ToTable("AuditLogs", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Auditoria.JobProgramado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Attempts")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime?>("LastRunAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PayloadJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelatedEntityId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ScheduledFor")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Attempts")
                        .HasDatabaseName("IX_Job_Attempts");

                    b.HasIndex("Status", "ScheduledFor")
                        .HasDatabaseName("IX_Job_Status_ScheduledFor");

                    b.HasIndex("Tipo", "ScheduledFor")
                        .HasDatabaseName("IX_Job_Tipo_ScheduledFor");

                    b.ToTable("JobsProgramados", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Auditoria.OutboxEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Attempts")
                        .HasColumnType("int");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("LastAttemptAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OccurredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PayloadJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Attempts")
                        .HasDatabaseName("IX_Outbox_Attempts");

                    b.HasIndex("EventType", "OccurredAt")
                        .HasDatabaseName("IX_Outbox_EventType_OccurredAt");

                    b.HasIndex("ProcessedAt", "OccurredAt")
                        .HasDatabaseName("IX_Outbox_ProcessedAt_OccurredAt");

                    b.ToTable("OutboxEvents", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.Cita", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DuracionMin")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MascotaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MotivoConsulta")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("MotivoRechazo")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Notas")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid?>("PagoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PropietarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SalaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VeterinarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PropietarioId");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Cita_Status");

                    b.HasIndex("MascotaId", "StartAt")
                        .HasDatabaseName("IX_Cita_MascotaId_StartAt");

                    b.HasIndex("SalaId", "StartAt", "Status")
                        .HasDatabaseName("IX_Cita_Sala_Start_Status");

                    b.HasIndex("VeterinarioId", "StartAt", "Status")
                        .HasDatabaseName("IX_Cita_Vet_Start_Status");

                    b.ToTable("Citas", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.CitaHistorialEstado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ChangedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FromStatus")
                        .HasColumnType("int");

                    b.Property<string>("Notas")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("ToStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CitaId", "ChangedAt")
                        .HasDatabaseName("IX_CitaHistorial_CitaId_ChangedAt");

                    b.ToTable("CitasHistorialEstados", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.CitaRecordatorio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CitaId", "Tipo")
                        .IsUnique()
                        .HasDatabaseName("UX_CitaRecordatorio_CitaId_Tipo");

                    b.ToTable("CitasRecordatorios", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.Pago", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Concepto")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsAnticipo")
                        .HasColumnType("bit");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCancelacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaConfirmacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<int>("Metodo")
                        .HasColumnType("int");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("MXN");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoRestante")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MontoTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroPago")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("PagoPrincipalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PayPalCaptureId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PayPalOrderId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PayPalPayerEmail")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PayPalPayerId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PayPalPayerName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Referencia")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("TicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CitaId");

                    b.HasIndex("NumeroPago")
                        .IsUnique();

                    b.HasIndex("PagoPrincipalId");

                    b.HasIndex("PayPalCaptureId");

                    b.HasIndex("PayPalOrderId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Pagos", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.Sala", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activa")
                        .HasColumnType("bit");

                    b.Property<int?>("CapacidadMaxima")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasDatabaseName("UX_Sala_Nombre");

                    b.ToTable("Salas", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.SolicitudCitaDigital", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CostoEstimado")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescripcionServicio")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("DisponibilidadVerificada")
                        .HasColumnType("bit");

                    b.Property<int>("DuracionEstimadaMin")
                        .HasColumnType("int");

                    b.Property<string>("EspecieMascota")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaConfirmacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHoraSolicitada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRechazo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRevision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVerificacionDisponibilidad")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MascotaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("MontoAnticipo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MotivoConsulta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoRechazo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreMascota")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NotasInternas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroSolicitud")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("PagoAnticipoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RazaMascota")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("RevisadoPorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SalaPreferidaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServicioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SolicitanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("VeterinarioPreferidoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CitaId");

                    b.HasIndex("Estado");

                    b.HasIndex("FechaHoraSolicitada");

                    b.HasIndex("FechaSolicitud");

                    b.HasIndex("MascotaId");

                    b.HasIndex("NumeroSolicitud")
                        .IsUnique();

                    b.HasIndex("PagoAnticipoId");

                    b.HasIndex("RevisadoPorId");

                    b.HasIndex("SalaPreferidaId");

                    b.HasIndex("ServicioId");

                    b.HasIndex("SolicitanteId");

                    b.HasIndex("VeterinarioPreferidoId");

                    b.ToTable("SolicitudesCitasDigitales", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.Ticket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CostoAdicional")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoInsumos")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostoProcedimiento")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescripcionProcedimiento")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("Descuento")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Diagnostico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EntregadoPorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaProcedimiento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IVA")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("MascotaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MedicacionPrescrita")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProcedimiento")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NumeroTicket")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PagoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Subtotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tratamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VeterinarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CitaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EntregadoPorId");

                    b.HasIndex("MascotaId");

                    b.HasIndex("NumeroTicket")
                        .IsUnique();

                    b.HasIndex("PagoId")
                        .IsUnique()
                        .HasFilter("[PagoId] IS NOT NULL");

                    b.HasIndex("VeterinarioId");

                    b.ToTable("Tickets", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.TicketDetalle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<Guid?>("ItemInventarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Subtotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("TicketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Unidad")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ItemInventarioId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketDetalles", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Donaciones.Donacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Anonima")
                        .HasColumnType("bit");

                    b.Property<string>("CancellationReason")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("CancelledAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CapturedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mensaje")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasDefaultValue("MXN");

                    b.Property<decimal>("Monto")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PayerEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PayerName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PaypalCaptureId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PaypalOrderId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PaypalPayerId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Source")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PaypalCaptureId")
                        .IsUnique()
                        .HasDatabaseName("UX_Donacion_PaypalCaptureId")
                        .HasFilter("[PaypalCaptureId] IS NOT NULL");

                    b.HasIndex("PaypalOrderId")
                        .HasDatabaseName("IX_Donacion_PaypalOrderId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("Status", "CreatedAt")
                        .HasDatabaseName("IX_Donacion_Status_CreatedAt");

                    b.ToTable("Donaciones", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Donaciones.WebhookEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("LastRetryAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PayloadJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProcessedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Provider")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceivedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Retries")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique()
                        .HasDatabaseName("UX_Webhook_EventId");

                    b.HasIndex("Provider", "Status", "ReceivedAt")
                        .HasDatabaseName("IX_Webhook_Provider_Status_ReceivedAt");

                    b.ToTable("WebhookEvents", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.HistorialClinico.AdjuntoMedico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("EntryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EntryType")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("MascotaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("StorageKey")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UploadedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EntryType", "EntryId")
                        .HasDatabaseName("IX_AdjMed_EntryType_EntryId");

                    b.HasIndex("MascotaId", "UploadedAt")
                        .HasDatabaseName("IX_AdjMed_MascotaId_UploadedAt");

                    b.ToTable("AdjuntosMedicos", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.HistorialClinico.Cirugia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Anesthesia")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Complications")
                        .HasColumnType("bit");

                    b.Property<string>("CuidadosPostoperatorios")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("DuracionMin")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaRevision")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MascotaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Medicacion")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("PerformedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("VeterinarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MascotaId", "PerformedAt")
                        .HasDatabaseName("IX_Cirugia_MascotaId_PerformedAt");

                    b.ToTable("Cirugias", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.HistorialClinico.Desparasitacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AppliedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dose")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("MascotaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NextDueAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Product")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<Guid>("VeterinarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MascotaId", "AppliedAt")
                        .HasDatabaseName("IX_Desp_MascotaId_AppliedAt");

                    b.ToTable("Desparasitaciones", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.HistorialClinico.Expediente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Anamnesis")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid?>("CitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MascotaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MotivoConsulta")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Notas")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Pronostico")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Tratamiento")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("VeterinarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CitaId");

                    b.HasIndex("MascotaId", "Fecha")
                        .HasDatabaseName("IX_Expediente_MascotaId_Fecha");

                    b.ToTable("Expedientes", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.HistorialClinico.Vacunacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AppliedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dose")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Lot")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("MascotaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("NextDueAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ReaccionAdversa")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("VaccineName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("VeterinarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MascotaId", "AppliedAt")
                        .HasDatabaseName("IX_Vacuna_MascotaId_AppliedAt");

                    b.ToTable("Vacunaciones", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.HistorialClinico.Valoracion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CondicionCorporal")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("FrecuenciaCardiaca")
                        .HasColumnType("int");

                    b.Property<int?>("FrecuenciaRespiratoria")
                        .HasColumnType("int");

                    b.Property<Guid>("MascotaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<decimal?>("Peso")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TakenAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TakenBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Temperatura")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CitaId");

                    b.HasIndex("MascotaId", "TakenAt")
                        .HasDatabaseName("IX_Valoracion_MascotaId_TakenAt");

                    b.ToTable("Valoraciones", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.AlertaInventario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AcknowledgedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("AcknowledgedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ClosedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PayloadJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResolutionNotes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Status", "CreatedAt")
                        .HasDatabaseName("IX_Alert_Status_CreatedAt");

                    b.HasIndex("ItemId", "Status", "Tipo")
                        .HasDatabaseName("IX_Alert_ItemId_Status_Tipo");

                    b.ToTable("AlertasInventario", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.Compra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRecepcion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notas")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("NumeroFactura")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ProveedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RecibidoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Compra_Status");

                    b.HasIndex("ProveedorId", "FechaCompra")
                        .HasDatabaseName("IX_Compra_ProveedorId_Fecha");

                    b.ToTable("Compras", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.DetalleCompra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CompraId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Lote")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notas")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CompraId")
                        .HasDatabaseName("IX_DetalleCompra_CompraId");

                    b.HasIndex("ItemId");

                    b.ToTable("DetallesCompras", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.ItemInventario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("MinQty")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Notas")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Unidad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Activo")
                        .HasDatabaseName("IX_ItemInventario_Activo");

                    b.HasIndex("Categoria")
                        .HasDatabaseName("IX_ItemInventario_Categoria");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasDatabaseName("UX_ItemInventario_Nombre");

                    b.ToTable("ItemsInventario", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.LoteInventario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Lote")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notas")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("QtyDisponible")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyInicial")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ExpDate")
                        .HasDatabaseName("IX_Lote_ExpDate");

                    b.HasIndex("ItemId", "ExpDate")
                        .HasDatabaseName("IX_Lote_ItemId_ExpDate");

                    b.HasIndex("ItemId", "QtyDisponible")
                        .HasDatabaseName("IX_Lote_ItemId_QtyDisponible");

                    b.ToTable("LotesInventario", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.MovimientoInventario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<Guid>("PerformedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Qty")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid?>("RelatedAppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RelatedAppointmentId")
                        .HasDatabaseName("IX_Mov_AppointmentId");

                    b.HasIndex("BatchId", "CreatedAt")
                        .HasDatabaseName("IX_Mov_BatchId_CreatedAt");

                    b.HasIndex("ItemId", "CreatedAt")
                        .HasDatabaseName("IX_Mov_ItemId_CreatedAt");

                    b.ToTable("MovimientosInventario", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.Proveedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Contacto")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Direccion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Notas")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("RFC")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .HasDatabaseName("IX_Proveedor_Email");

                    b.HasIndex("Estatus")
                        .HasDatabaseName("IX_Proveedor_Estatus");

                    b.ToTable("Proveedores", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.ReporteUsoInsumoDetalle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notas")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("QtyAplicada")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtySolicitada")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ReporteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemId")
                        .HasDatabaseName("IX_ReporteDetalle_ItemId");

                    b.HasIndex("ReporteId")
                        .HasDatabaseName("IX_ReporteDetalle_ReporteId");

                    b.ToTable("ReportesUsoInsumosDetalles", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.ReporteUsoInsumos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClientUsageId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Notes")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("RevertReason")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("RevertedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RevertedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubmittedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("VetId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CitaId")
                        .IsUnique()
                        .HasDatabaseName("UX_Report_Appointment");

                    b.HasIndex("ClientUsageId")
                        .IsUnique()
                        .HasDatabaseName("UX_Report_ClientUsageId")
                        .HasFilter("[ClientUsageId] IS NOT NULL");

                    b.HasIndex("Status", "SubmittedAt")
                        .HasDatabaseName("IX_Report_Status_SubmittedAt");

                    b.ToTable("ReportesUsoInsumos", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.ReporteUsoSplitLote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ConsumedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DetalleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("QtyConsumida")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ReporteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BatchId")
                        .HasDatabaseName("IX_Split_BatchId");

                    b.HasIndex("DetalleId");

                    b.HasIndex("ReporteId", "DetalleId")
                        .HasDatabaseName("IX_Split_ReporteId_DetalleId");

                    b.ToTable("ReportesUsoSplitLotes", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Mascotas.AdopcionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ChangedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ChangedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FromEstado")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("SolicitudId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ToEstado")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SolicitudId", "ChangedAt")
                        .HasDatabaseName("IX_AdopLog_SolicitudId_ChangedAt");

                    b.ToTable("AdopcionLogs", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Mascotas.Mascota", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EstadoSalud")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notas")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Origen")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Personalidad")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Raza")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RequisitoAdopcion")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DeletedAt")
                        .HasDatabaseName("IX_Mascota_DeletedAt");

                    b.HasIndex("Estatus")
                        .HasDatabaseName("IX_Mascota_Estatus");

                    b.HasIndex("Especie", "Estatus")
                        .HasDatabaseName("IX_Mascota_Especie_Estatus");

                    b.ToTable("Mascotas", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Mascotas.MascotaFoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EsPrincipal")
                        .HasColumnType("bit");

                    b.Property<Guid>("MascotaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("StorageKey")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MascotaId", "Orden")
                        .HasDatabaseName("IX_MascotaFoto_MascotaId_Orden");

                    b.ToTable("MascotasFotos", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Mascotas.SolicitudAdopcion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaAprobacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRevision")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int>("HorasDisponibilidad")
                        .HasColumnType("int");

                    b.Property<decimal?>("IngresosMensuales")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("MascotaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MotivoAdopcion")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("MotivoRechazo")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("NumNinios")
                        .HasColumnType("int");

                    b.Property<bool>("OtrasMascotas")
                        .HasColumnType("bit");

                    b.Property<Guid?>("RevisadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Vivienda")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Estado")
                        .HasDatabaseName("IX_Adopcion_Estado");

                    b.HasIndex("MascotaId", "Estado")
                        .HasDatabaseName("IX_Adopcion_MascotaId_Estado");

                    b.HasIndex("UsuarioId", "FechaSolicitud")
                        .HasDatabaseName("IX_Adopcion_UsuarioId_Fecha");

                    b.ToTable("SolicitudesAdopcion", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Mascotas.SolicitudAdopcionAdjunto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<Guid>("SolicitudId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorageKey")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UploadedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SolicitudId", "UploadedAt")
                        .HasDatabaseName("IX_Adjunto_SolicitudId_UploadedAt");

                    b.ToTable("SolicitudesAdopcionAdjuntos", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Security.ConsentimientoPolitica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AcceptedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ip")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId", "Version")
                        .HasDatabaseName("IX_Consentimiento_UsuarioId_Version");

                    b.ToTable("ConsentimientosPoliticas", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Security.Dispositivo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AppVersion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastSeenAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Plataforma")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique()
                        .HasDatabaseName("UX_Dispositivo_Token");

                    b.HasIndex("UsuarioId")
                        .HasDatabaseName("IX_Dispositivo_UsuarioId");

                    b.ToTable("Dispositivos", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Security.Notificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DataJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeliveredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("ReadAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Tipo", "Fecha")
                        .HasDatabaseName("IX_Notif_Tipo_Fecha");

                    b.HasIndex("UsuarioId", "Fecha")
                        .HasDatabaseName("IX_Notif_UsuarioId_Fecha");

                    b.ToTable("Notificaciones", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Security.PreferenciaNotificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Canal")
                        .HasColumnType("int");

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId", "Canal", "Categoria")
                        .IsUnique()
                        .HasDatabaseName("UX_PreferenciaNotif_Usuario_Canal_Categoria");

                    b.ToTable("PreferenciasNotificaciones", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Security.Rol", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasDatabaseName("UX_Rol_Nombre");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Descripcion = "Administrador del sistema",
                            Nombre = "Admin"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Descripcion = "Veterinario",
                            Nombre = "Veterinario"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Descripcion = "Recepcionista",
                            Nombre = "Recepcionista"
                        },
                        new
                        {
                            Id = new Guid("44444444-4444-4444-4444-444444444444"),
                            Descripcion = "Asistente del refugio",
                            Nombre = "Asistente"
                        },
                        new
                        {
                            Id = new Guid("55555555-5555-5555-5555-555555555555"),
                            Descripcion = "Usuario adoptante",
                            Nombre = "Adoptante"
                        });
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Security.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AceptoPoliticasAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("AceptoPoliticasVersion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UltimoAccesoAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("UX_Usuario_Email");

                    b.HasIndex("Estatus")
                        .HasDatabaseName("IX_Usuario_Estatus");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Security.UsuarioRol", b =>
                {
                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AsignadoAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("AsignadoPor")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UsuarioId", "RolId");

                    b.HasIndex("RolId");

                    b.HasIndex("UsuarioId")
                        .HasDatabaseName("IX_UsuarioRol_UsuarioId");

                    b.ToTable("UsuariosRoles", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Servicios.Empleado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Cedula")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Disponibilidad")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("EmailLaboral")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaContratacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Sueldo")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TelefonoLaboral")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Activo")
                        .HasDatabaseName("IX_Empleado_Activo");

                    b.HasIndex("UsuarioId")
                        .IsUnique()
                        .HasDatabaseName("UX_Empleado_UsuarioId");

                    b.ToTable("Empleados", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Servicios.EmpleadoEspecialidad", b =>
                {
                    b.Property<Guid>("EmpleadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EspecialidadId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Certificacion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ObtainedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("EmpleadoId", "EspecialidadId");

                    b.HasIndex("EspecialidadId");

                    b.ToTable("EmpleadosEspecialidades", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Servicios.Especialidad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Descripcion")
                        .IsUnique()
                        .HasDatabaseName("UX_Especialidad_Descripcion");

                    b.ToTable("Especialidades", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Servicios.Horario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DiaSemana")
                        .HasColumnType("int");

                    b.Property<Guid>("EmpleadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan?>("HoraEntrada")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("HoraSalida")
                        .HasColumnType("time");

                    b.Property<string>("Notas")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("RangoFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RangoInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId", "Fecha")
                        .HasDatabaseName("IX_Horario_EmpleadoId_Fecha");

                    b.HasIndex("EmpleadoId", "RangoInicio", "RangoFin")
                        .HasDatabaseName("IX_Horario_EmpleadoId_Rango");

                    b.ToTable("Horarios", (string)null);
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Servicios.Servicio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("DuracionMinDefault")
                        .HasColumnType("int");

                    b.Property<string>("Notas")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal?>("PrecioSugerido")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Activo")
                        .HasDatabaseName("IX_Servicio_Activo");

                    b.HasIndex("Descripcion")
                        .IsUnique()
                        .HasDatabaseName("UX_Servicio_Descripcion");

                    b.ToTable("Servicios", (string)null);
                });

            modelBuilder.Entity("AdjuntoMedicoExpediente", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.HistorialClinico.AdjuntoMedico", null)
                        .WithMany()
                        .HasForeignKey("AdjuntosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdoPetsBKD.Domain.Entities.HistorialClinico.Expediente", null)
                        .WithMany()
                        .HasForeignKey("ExpedienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.Cita", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Mascotas.Mascota", "Mascota")
                        .WithMany()
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Usuario", "Propietario")
                        .WithMany()
                        .HasForeignKey("PropietarioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdoPetsBKD.Domain.Entities.Clinica.Sala", "Sala")
                        .WithMany("Citas")
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Usuario", "Veterinario")
                        .WithMany()
                        .HasForeignKey("VeterinarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Mascota");

                    b.Navigation("Propietario");

                    b.Navigation("Sala");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.CitaHistorialEstado", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Clinica.Cita", "Cita")
                        .WithMany("HistorialEstados")
                        .HasForeignKey("CitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.CitaRecordatorio", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Clinica.Cita", "Cita")
                        .WithMany("Recordatorios")
                        .HasForeignKey("CitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cita");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.Pago", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Clinica.Cita", "Cita")
                        .WithMany()
                        .HasForeignKey("CitaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdoPetsBKD.Domain.Entities.Clinica.Pago", "PagoPrincipal")
                        .WithMany("PagosComplementarios")
                        .HasForeignKey("PagoPrincipalId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Cita");

                    b.Navigation("PagoPrincipal");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.SolicitudCitaDigital", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Clinica.Cita", "Cita")
                        .WithMany()
                        .HasForeignKey("CitaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdoPetsBKD.Domain.Entities.Mascotas.Mascota", "Mascota")
                        .WithMany()
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdoPetsBKD.Domain.Entities.Clinica.Pago", "PagoAnticipo")
                        .WithMany()
                        .HasForeignKey("PagoAnticipoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Usuario", "RevisadoPor")
                        .WithMany()
                        .HasForeignKey("RevisadoPorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdoPetsBKD.Domain.Entities.Clinica.Sala", "SalaPreferida")
                        .WithMany()
                        .HasForeignKey("SalaPreferidaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdoPetsBKD.Domain.Entities.Servicios.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Usuario", "Solicitante")
                        .WithMany()
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Usuario", "VeterinarioPreferido")
                        .WithMany()
                        .HasForeignKey("VeterinarioPreferidoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Cita");

                    b.Navigation("Mascota");

                    b.Navigation("PagoAnticipo");

                    b.Navigation("RevisadoPor");

                    b.Navigation("SalaPreferida");

                    b.Navigation("Servicio");

                    b.Navigation("Solicitante");

                    b.Navigation("VeterinarioPreferido");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.Ticket", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Clinica.Cita", "Cita")
                        .WithMany()
                        .HasForeignKey("CitaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Usuario", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Usuario", "EntregadoPor")
                        .WithMany()
                        .HasForeignKey("EntregadoPorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdoPetsBKD.Domain.Entities.Mascotas.Mascota", "Mascota")
                        .WithMany()
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdoPetsBKD.Domain.Entities.Clinica.Pago", "Pago")
                        .WithOne("Ticket")
                        .HasForeignKey("AdoPetsBKD.Domain.Entities.Clinica.Ticket", "PagoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Usuario", "Veterinario")
                        .WithMany()
                        .HasForeignKey("VeterinarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cita");

                    b.Navigation("Cliente");

                    b.Navigation("EntregadoPor");

                    b.Navigation("Mascota");

                    b.Navigation("Pago");

                    b.Navigation("Veterinario");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.TicketDetalle", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Inventario.ItemInventario", "ItemInventario")
                        .WithMany()
                        .HasForeignKey("ItemInventarioId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdoPetsBKD.Domain.Entities.Clinica.Ticket", "Ticket")
                        .WithMany("Detalles")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ItemInventario");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Donaciones.Donacion", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.HistorialClinico.AdjuntoMedico", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Mascotas.Mascota", "Mascota")
                        .WithMany()
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.HistorialClinico.Cirugia", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Mascotas.Mascota", "Mascota")
                        .WithMany()
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.HistorialClinico.Desparasitacion", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Mascotas.Mascota", "Mascota")
                        .WithMany()
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.HistorialClinico.Expediente", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Clinica.Cita", "Cita")
                        .WithMany()
                        .HasForeignKey("CitaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AdoPetsBKD.Domain.Entities.Mascotas.Mascota", "Mascota")
                        .WithMany()
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cita");

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.HistorialClinico.Vacunacion", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Mascotas.Mascota", "Mascota")
                        .WithMany()
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.HistorialClinico.Valoracion", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Clinica.Cita", "Cita")
                        .WithMany()
                        .HasForeignKey("CitaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AdoPetsBKD.Domain.Entities.Mascotas.Mascota", "Mascota")
                        .WithMany()
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cita");

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.AlertaInventario", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Inventario.ItemInventario", "Item")
                        .WithMany("Alertas")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.Compra", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Inventario.Proveedor", "Proveedor")
                        .WithMany("Compras")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.DetalleCompra", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Inventario.Compra", "Compra")
                        .WithMany("Detalles")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdoPetsBKD.Domain.Entities.Inventario.ItemInventario", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.LoteInventario", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Inventario.ItemInventario", "Item")
                        .WithMany("Lotes")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.MovimientoInventario", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Inventario.LoteInventario", "Batch")
                        .WithMany("Movimientos")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AdoPetsBKD.Domain.Entities.Inventario.ItemInventario", "Item")
                        .WithMany("Movimientos")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AdoPetsBKD.Domain.Entities.Clinica.Cita", "RelatedAppointment")
                        .WithMany()
                        .HasForeignKey("RelatedAppointmentId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Batch");

                    b.Navigation("Item");

                    b.Navigation("RelatedAppointment");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.ReporteUsoInsumoDetalle", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Inventario.ItemInventario", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AdoPetsBKD.Domain.Entities.Inventario.ReporteUsoInsumos", "Reporte")
                        .WithMany("Detalles")
                        .HasForeignKey("ReporteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Reporte");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.ReporteUsoInsumos", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Clinica.Cita", "Cita")
                        .WithOne("ReporteInsumos")
                        .HasForeignKey("AdoPetsBKD.Domain.Entities.Inventario.ReporteUsoInsumos", "CitaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cita");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.ReporteUsoSplitLote", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Inventario.LoteInventario", "Batch")
                        .WithMany("SplitsUso")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AdoPetsBKD.Domain.Entities.Inventario.ReporteUsoInsumoDetalle", "Detalle")
                        .WithMany("Splits")
                        .HasForeignKey("DetalleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdoPetsBKD.Domain.Entities.Inventario.ReporteUsoInsumos", "Reporte")
                        .WithMany()
                        .HasForeignKey("ReporteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Batch");

                    b.Navigation("Detalle");

                    b.Navigation("Reporte");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Mascotas.AdopcionLog", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Mascotas.SolicitudAdopcion", "Solicitud")
                        .WithMany("Logs")
                        .HasForeignKey("SolicitudId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Mascotas.MascotaFoto", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Mascotas.Mascota", "Mascota")
                        .WithMany("Fotos")
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Mascotas.SolicitudAdopcion", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Mascotas.Mascota", "Mascota")
                        .WithMany("SolicitudesAdopcion")
                        .HasForeignKey("MascotaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Mascota");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Mascotas.SolicitudAdopcionAdjunto", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Mascotas.SolicitudAdopcion", "Solicitud")
                        .WithMany("Adjuntos")
                        .HasForeignKey("SolicitudId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Security.ConsentimientoPolitica", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Usuario", "Usuario")
                        .WithMany("Consentimientos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Security.Dispositivo", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Usuario", "Usuario")
                        .WithMany("Dispositivos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Security.Notificacion", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Usuario", "Usuario")
                        .WithMany("Notificaciones")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Security.PreferenciaNotificacion", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Security.UsuarioRol", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Rol", "Rol")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Servicios.Empleado", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Security.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Servicios.EmpleadoEspecialidad", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Servicios.Empleado", "Empleado")
                        .WithMany("Especialidades")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdoPetsBKD.Domain.Entities.Servicios.Especialidad", "Especialidad")
                        .WithMany("EmpleadoEspecialidades")
                        .HasForeignKey("EspecialidadId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Especialidad");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Servicios.Horario", b =>
                {
                    b.HasOne("AdoPetsBKD.Domain.Entities.Servicios.Empleado", "Empleado")
                        .WithMany("Horarios")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.Cita", b =>
                {
                    b.Navigation("HistorialEstados");

                    b.Navigation("Recordatorios");

                    b.Navigation("ReporteInsumos");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.Pago", b =>
                {
                    b.Navigation("PagosComplementarios");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.Sala", b =>
                {
                    b.Navigation("Citas");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Clinica.Ticket", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.Compra", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.ItemInventario", b =>
                {
                    b.Navigation("Alertas");

                    b.Navigation("Lotes");

                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.LoteInventario", b =>
                {
                    b.Navigation("Movimientos");

                    b.Navigation("SplitsUso");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.Proveedor", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.ReporteUsoInsumoDetalle", b =>
                {
                    b.Navigation("Splits");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Inventario.ReporteUsoInsumos", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Mascotas.Mascota", b =>
                {
                    b.Navigation("Fotos");

                    b.Navigation("SolicitudesAdopcion");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Mascotas.SolicitudAdopcion", b =>
                {
                    b.Navigation("Adjuntos");

                    b.Navigation("Logs");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Security.Rol", b =>
                {
                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Security.Usuario", b =>
                {
                    b.Navigation("Consentimientos");

                    b.Navigation("Dispositivos");

                    b.Navigation("Notificaciones");

                    b.Navigation("UsuarioRoles");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Servicios.Empleado", b =>
                {
                    b.Navigation("Especialidades");

                    b.Navigation("Horarios");
                });

            modelBuilder.Entity("AdoPetsBKD.Domain.Entities.Servicios.Especialidad", b =>
                {
                    b.Navigation("EmpleadoEspecialidades");
                });
#pragma warning restore 612, 618
        }
    }
}
